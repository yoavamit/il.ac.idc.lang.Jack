/*
 * generated by Xtext
 */
package il.ac.idc.lang.formatting;

import com.google.inject.Inject;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import il.ac.idc.lang.services.JackGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class JackFormatter extends AbstractDeclarativeFormatter {
	
	@Inject
	private JackGrammarAccess grammarAccess;
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
	    
		c.setLinewrap(0, 1, 2).before(grammarAccess.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(grammarAccess.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(grammarAccess.getML_COMMENTRule());
		
		c.setLinewrap(1).after(grammarAccess.getClassDefAccess().getLeftCurlyBracketKeyword_2());
		c.setLinewrap(1).after(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_4());
		c.setLinewrap(1).after(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_7_1());
		c.setLinewrap(1).after(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_6());
		c.setLinewrap(1).after(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_7_3());
		c.setLinewrap(1).after(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4());
		c.setLinewrap(1).after(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_6());
		
		c.setNoSpace().after(grammarAccess.getSubroutineDeclAccess().getLeftParenthesisKeyword_3());
		c.setNoSpace().before(grammarAccess.getSubroutineDeclAccess().getRightParenthesisKeyword_5());
	}
}
